{"mappings":"YAEA,SAASA,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXSO,SAASC,cAAc,SAgB/BC,iBAAiB,UAEzB,SAA0BC,GACxBA,EAAIC,iBACUC,OAAOF,EAAIG,OAAO,GAAGC,OACtBF,OAAOF,EAAIG,OAAO,GAAGC,OAGlC,IAJA,IAEMC,EAASH,OAAOF,EAAIG,OAAO,GAAGC,OAE3BE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChClB,EAAc,EAAG,MACdmB,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,QAAQC,IAAI,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,QAAQC,IAAI,sBAAqCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const newForm = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nnewForm.addEventListener('submit', createNewPromise);\n\nfunction createNewPromise(evt) {\n  evt.preventDefault();\n  const delay = Number(evt.target[0].value);\n  const step = Number(evt.target[1].value);\n  const amount = Number(evt.target[2].value);\n\n  for (let i = 0; i <= amount; i += 1) {\n    createPromise(2, 1500)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","Number","target","value","amount","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.606d01c3.js.map"}